##__________________________________________________Specify how to connect to your MongoDB cluster.-----------------------------------------##
name=mongo-sink
topics=sourceA,sourceB
connector.class=com.mongodb.kafka.connect.MongoSinkConnector
#The maximum number of tasks to create for this connector. The connector may create fewer than the maximum tasks specified if it cannot handle the level of parallelism you specify.
tasks.max=1

# Message types
#io.confluent.connect.avro.AvroConverter
key.converter=org.apache.kafka.connect.storage.StringConverter
key.converter.schema.registry.url=http://localhost:8081
value.converter=iorg.apache.kafka.connect.json.JsonConverter
value.converter.schema.registry.url=http://localhost:8081

# Specific global MongoDB Sink Connector configuration
connection.uri=mongodb://172.30.43.94:27017
database=hamrahbaamDB
collection=UserNotification


## Document manipulation settings
key.projection.type=none
key.projection.list=
value.projection.type=none
value.projection.list=

field.renamer.mapping=[]
field.renamer.regex=[]

document.id.strategy=com.mongodb.kafka.connect.sink.processor.id.strategy.BsonOidStrategy
post.processor.chain=com.mongodb.kafka.connect.sink.processor.DocumentIdAdder


# Write configuration
delete.on.null.values=false
writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneDefaultStrategy

#Maximum number of sink records to batch together for processing. set to 0, the connector performs a single bulk write for the entire batch
max.batch.size = 0
#How long (in milliseconds) to wait before the sink connector should resume processing after reaching the rate limiting threshold.
rate.limiting.timeout=0
#Number of batches of records the sink connector processes in order to trigger the rate limiting timeout. A value of 0 means no rate limiting.
rate.limiting.every.n=0

# Change Data Capture handling
change.data.capture.handler=

# Topic override examples for the sourceB topic
topic.override.sourceB.collection=sourceB
topic.override.sourceB.document.id.strategy=com.mongodb.kafka.connect.sink.processor.id.strategy.ProvidedInValueStrategy

#error handling
#Whether to continue processing messages if the connector encounters an error. Allows the connector to override the errors.tolerance Kafka cluster setting.
#When set to none, the connector reports any error and blocks further processing of the rest of the messages.
#When set to all, the connector ignores any problematic messages.
mongo.errors.tolerance=all
#Whether the connector should write details of errors including failed operations to the log file. The connector classifies errors as "tolerated" or "not tolerated" using the errors.tolerance or mongo.errors.tolerance settings.
#When set to true, the connector logs both "tolerated" and "not tolerated" errors.
#When set to false, the connector logs "not tolerated" errors.
mongo.errors.log.enable=false
